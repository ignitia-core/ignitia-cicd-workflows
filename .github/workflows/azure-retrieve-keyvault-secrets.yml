name: Azure - Retrieve Key Vault Secrets

on:
  workflow_call:
    inputs:
      keyvault-name:
        description: 'Name of the Azure Key Vault'
        required: true
        type: string
      secret-names:
        description: 'Newline-separated list of secret names to retrieve'
        required: true
        type: string
    outputs:
      secrets-json:
        description: 'JSON object containing all retrieved secrets as key-value pairs'
        value: ${{ jobs.fetch-secrets.outputs.secrets-json }}

permissions:
  id-token: write
  contents: read

jobs:
  fetch-secrets:
    name: Fetch secrets from Azure Key Vault
    runs-on: ubuntu-latest
    outputs:
      secrets-json: ${{ steps.build-json.outputs.secrets-json }}
    steps:
      - name: Load Azure config
        id: azure_config
        shell: bash
        run: |
          set -euo pipefail
          CONFIG="$(curl -sS https://raw.githubusercontent.com/ignitia-core/ignitia-cicd-configuration/master/configuration.json)"
          TENANT_ID="$(jq -r .tenantId <<< "$CONFIG")"
          SUBSCRIPTION_ID="$(jq -r .subscriptionId <<< "$CONFIG")"
          CLIENT_ID="$(jq -r '.clients["github-oidc"].clientId' <<< "$CONFIG")"

          # expose as step outputs
          {
            echo "tenant-id=$TENANT_ID"
            echo "subscription-id=$SUBSCRIPTION_ID"
            echo "client-id=$CLIENT_ID"
          } >> "$GITHUB_OUTPUT"

      - name: Azure login via OIDC
        uses: azure/login@v2
        with:
          tenant-id: ${{ steps.azure_config.outputs.tenant-id }}
          client-id: ${{ steps.azure_config.outputs.client-id }}
          subscription-id: ${{ steps.azure_config.outputs.subscription-id }}
          allow-no-subscriptions: true

      - name: Prepare secret names
        id: secrets-prep
        shell: bash
        run: |
          set -euo pipefail
          # Convert escaped newlines to actual newlines
          printf '%s\n' "${{ inputs.secret-names }}" | sed 's/\\n/\n/g' > secrets.txt
          echo "names<<EOF" >> "$GITHUB_OUTPUT"
          cat secrets.txt >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Fetch secrets from Key Vault
        id: keyvault
        uses: azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ inputs.keyvault-name }}
          secrets: ${{ steps.secrets-prep.outputs.names }}

      - name: Build JSON output
        id: build-json
        shell: bash
        env:
          KEYVAULT_OUTPUTS: ${{ toJson(steps.keyvault.outputs) }}
        run: |
          set -euo pipefail
          
          # The azure/get-keyvault-secrets action outputs all secrets as step outputs
          # We can access them via the toJson() function and parse them
          
          # GitHub Actions automatically masks secret values
          echo "secrets-json=$KEYVAULT_OUTPUTS" >> "$GITHUB_OUTPUT"
          
          echo "âœ“ Successfully retrieved secrets from Key Vault"
