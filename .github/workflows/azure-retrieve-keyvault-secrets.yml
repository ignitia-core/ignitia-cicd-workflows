name: Azure - Retrieve Key Vault Secrets

on:
  workflow_call:
    inputs:
      keyvault-name:
        description: 'Name of the Azure Key Vault'
        required: true
        type: string
      secret-names:
        description: 'Newline-separated list of secret names to retrieve'
        required: true
        type: string
    outputs:
      secrets-json:
        description: 'JSON object containing all retrieved secrets as key-value pairs'
        value: ${{ jobs.fetch-secrets.outputs.secrets-json }}

permissions:
  id-token: write
  contents: read

jobs:
  fetch-secrets:
    runs-on: ubuntu-latest
    outputs:
      secrets-json: ${{ steps.build-json.outputs.secrets-json }}
    steps:
      - name: Load Azure config
        id: azure_config
        shell: bash
        run: |
          set -euo pipefail
          CONFIG="$(curl -sS https://raw.githubusercontent.com/ignitia-core/ignitia-cicd-configuration/master/configuration.json)"
          TENANT_ID="$(jq -r .tenantId <<< "$CONFIG")"
          SUBSCRIPTION_ID="$(jq -r .subscriptionId <<< "$CONFIG")"
          CLIENT_ID="$(jq -r '.clients["github-oidc"].clientId' <<< "$CONFIG")"

          # expose as step outputs
          {
            echo "tenant-id=$TENANT_ID"
            echo "subscription-id=$SUBSCRIPTION_ID"
            echo "client-id=$CLIENT_ID"
          } >> "$GITHUB_OUTPUT"

      - name: Azure login via OIDC
        uses: azure/login@v2
        with:
          tenant-id: ${{ steps.azure_config.outputs.tenant-id }}
          client-id: ${{ steps.azure_config.outputs.client-id }}
          subscription-id: ${{ steps.azure_config.outputs.subscription-id }}
          allow-no-subscriptions: true

      - name: Fetch secrets from Key Vault
        id: keyvault
        uses: azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ inputs.keyvault-name }}
          secrets: ${{ inputs.secret-names }}

      - name: Build JSON output
        id: build-json
        shell: bash
        run: |
          set -euo pipefail
          
          # Read secret names from input (newline-separated)
          SECRET_NAMES="${{ inputs.secret-names }}"
          
          # Initialize JSON object
          JSON_OUTPUT="{}"
          
          # Loop through each secret name and add to JSON
          while IFS= read -r secret_name; do
            # Skip empty lines
            [[ -z "$secret_name" ]] && continue
            
            # Get the secret value from the previous step's output
            # The azure/get-keyvault-secrets action outputs secrets with their names
            secret_value="${{ steps.keyvault.outputs[secret_name] }}"
            
            # Add to JSON object (properly escaped)
            JSON_OUTPUT=$(jq -n \
              --arg key "$secret_name" \
              --arg value "$secret_value" \
              --argjson obj "$JSON_OUTPUT" \
              '$obj + {($key): $value}')
          done <<< "$SECRET_NAMES"
          
          # Output the JSON (GitHub Actions will automatically mask secret values)
          echo "secrets-json=$JSON_OUTPUT" >> "$GITHUB_OUTPUT"
          
          echo "âœ“ Successfully retrieved $(echo "$JSON_OUTPUT" | jq 'length') secrets"
